-module(auth_utils).

-export([
    check_credentials/2,
    sign/1,
    check_sign/2
]).

-spec check_credentials(binary(), binary()) -> {ok, tuple()} | false.
check_credentials(<<"admin">>, <<"superpass">>) -> {ok, {}};
check_credentials(_Login, _Password) -> false.

-define(PRIV, <<"-----BEGIN DSA PRIVATE KEY-----\nMIIBvAIBAAKBgQC73BM4/DjzIa1DJuwhkHkR10Rrb3Ng6jq1AFLx/dlKqpWzfs/Y\nK0K2ICuzLjQsiDvZ+oHZU5oTfK7ImhZBVrMCR29636AnSz/JbQBWoGqk2p2MY7iC\nFKg52WiU6pVoLYaKNDzlnc2MpmjVpMOfiLfb5CyYADF/WD1d9h1gBv96HwIVAIrj\nlBN+/KMSuHqyHNIwoSWqygDJAoGBAJM+rKM17g0QEYhhp7FGiu157ieTF5T0uAZ8\nxbXZKD5p1BE68C4lvdzqX7WTgIBCa+HDZyc3gSW4DTbWijzN+UEr/Xm3UTwajrBm\nrrykWs6QoKqpR1BkXRa8d2PvLXbNKx0l7IT6mwbyzsJCHs0Jyc2CYsB24wU/8xHA\nV6wCiB5MAoGBAJlx3Ek1SkGSNw1KbSYrr2tJJFTy7n7RLb0iZijKnL8fog87fxCh\nznX5li9ZLmtxJi+JjEPCvEeXwA1WXGBy7aEC+UNlB9PwnD6738tmhW801WDW/qMg\nsF08Zd+80WMb3mUzkhwkTPmX1jNd0GRCUQ2OW12d8idzlY0XR2g2qOi2AhRs9NbY\nA2f0MvnbpKUvZ8JrkHzqaw==\n-----END DSA PRIVATE KEY-----\n">>).

-define(PUBL, <<"-----BEGIN PUBLIC KEY-----\nMIIBuDCCASwGByqGSM44BAEwggEfAoGBALvcEzj8OPMhrUMm7CGQeRHXRGtvc2Dq\nOrUAUvH92UqqlbN+z9grQrYgK7MuNCyIO9n6gdlTmhN8rsiaFkFWswJHb3rfoCdL\nP8ltAFagaqTanYxjuIIUqDnZaJTqlWgthoo0POWdzYymaNWkw5+It9vkLJgAMX9Y\nPV32HWAG/3ofAhUAiuOUE378oxK4erIc0jChJarKAMkCgYEAkz6sozXuDRARiGGn\nsUaK7XnuJ5MXlPS4BnzFtdkoPmnUETrwLiW93OpftZOAgEJr4cNnJzeBJbgNNtaK\nPM35QSv9ebdRPBqOsGauvKRazpCgqqlHUGRdFrx3Y+8tds0rHSXshPqbBvLOwkIe\nzQnJzYJiwHbjBT/zEcBXrAKIHkwDgYUAAoGBAJlx3Ek1SkGSNw1KbSYrr2tJJFTy\n7n7RLb0iZijKnL8fog87fxChznX5li9ZLmtxJi+JjEPCvEeXwA1WXGBy7aEC+UNl\nB9PwnD6738tmhW801WDW/qMgsF08Zd+80WMb3mUzkhwkTPmX1jNd0GRCUQ2OW12d\n8idzlY0XR2g2qOi2\n-----END PUBLIC KEY-----\n">>).

-define(PRIVK, {'DSAPrivateKey',0,
                 131919545330011661726940149940762444522865539690632044719018985110136824839515901946645137061793670535577582906821827092239369172952364628244104302460213315715224253116028076117723174047328722257623907421599034142954104210642171486313627201159260479076100352390645080491554256414606474992815200073263259548191,
                 792915894786233671604853038222572009134150516937,
                 103398830150672716221225232803440097083406050453295794331585839255757644900971487524956534258216583701369440468148261627523758208071299118657880765915401403304978558413085783082516304086628089716416513490805312194937046236831760164751256484567458782930193887965502510903550274940235457942550430371686646292044,
                 107752580156264899758976648644385789810037280027884253216947915892197545893715511298570858417159256232425990046207921942171075585448410411928738392985002749738805708523021748901680560399293235962621963936051599731688974999068161577434224185302267796071303624923643052202478150258411718071265984250359293995190,
                 622031100612124235789667290964609632780945255019}).

-define(PUBLK, {107752580156264899758976648644385789810037280027884253216947915892197545893715511298570858417159256232425990046207921942171075585448410411928738392985002749738805708523021748901680560399293235962621963936051599731688974999068161577434224185302267796071303624923643052202478150258411718071265984250359293995190,
 {'Dss-Parms',131919545330011661726940149940762444522865539690632044719018985110136824839515901946645137061793670535577582906821827092239369172952364628244104302460213315715224253116028076117723174047328722257623907421599034142954104210642171486313627201159260479076100352390645080491554256414606474992815200073263259548191,
              792915894786233671604853038222572009134150516937,
              103398830150672716221225232803440097083406050453295794331585839255757644900971487524956534258216583701369440468148261627523758208071299118657880765915401403304978558413085783082516304086628089716416513490805312194937046236831760164751256484567458782930193887965502510903550274940235457942550430371686646292044}}).

-define(PRIVK1, {'DSAPrivateKey',0,
                 7158182321293170210321741673819493103733157029781379054966575524277655333794103527409823511200457749188465893104634341963456499582580215378938901842857397,
                 896532109434309720323175096448794288223997049841,
                 3185114514263805304530682931629508197610428467687726195411702104463741134577832975516605024830329712492347556870952059179337498616711526992744906441922935,
                 5916287413578028924800228694302342905884872044587682904047536391263209517486461126625688942097234785556547696362199451275417961997808769936266582727795215,
                 465766799904829763336816815377510093581953479061}).

-define(PUBLK1, {5916287413578028924800228694302342905884872044587682904047536391263209517486461126625688942097234785556547696362199451275417961997808769936266582727795215,
 {'Dss-Parms',7158182321293170210321741673819493103733157029781379054966575524277655333794103527409823511200457749188465893104634341963456499582580215378938901842857397,
              896532109434309720323175096448794288223997049841,
              3185114514263805304530682931629508197610428467687726195411702104463741134577832975516605024830329712492347556870952059179337498616711526992744906441922935}}).

sign(BinString) ->
   %{ok, PemBin} = file:read_file("/home/ashim/work/mijkweb/priv/dsa_priv.pem"),
   %[DSAEntry] =  public_key:pem_decode(PemBin),
   %[DSAEntry] =  public_key:pem_decode(?PRIV),
   %Key = public_key:pem_entry_decode(DSAEntry),
   %Digest = crypto:sha(BinString),
   %base64:encode(public_key:sign(Digest, none, Key)).
   %mijkweb_utils:cookie_encode(public_key:sign(Digest, none, ?PRIVK)).
   mijkweb_utils:cookie_encode(public_key:sign(BinString, sha, ?PRIVK1)).

check_sign(BinString, Signature) ->
   %{ok, PemBin} = file:read_file("/home/ashim/work/mijkweb/priv/dsa_pub.pem"),
   %[DSAEntry] =  public_key:pem_decode(PemBin),
   %[DSAEntry] =  public_key:pem_decode(?PUBL),
   %Key = public_key:pem_entry_decode(DSAEntry),
   %Digest = crypto:sha(BinString),
   %public_key:verify(Digest, none, base64:decode(Signature), ?PUBLK).
   public_key:verify(BinString, sha, mijkweb_utils:cookie_decode(Signature), ?PUBLK1).
   
